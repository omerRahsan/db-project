---Display all first_name that has letter a in second character
---'_a%'
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '_a%';

SELECT DISTINCT LOCATION_ID
FROM DEPARTMENTS ;


SELECT COUNT(LOCATION_ID)
FROM LOCATIONS;

SELECT *
FROM DEPARTMENTS
WHERE DEPARTMENT_NAME LIKE '%IT%' AND MANAGER_ID != 103;

SELECT FIRST_NAME,COUNT(*)
FROM EMPLOYEES
GROUP BY FIRST_NAME
HAVING COUNT(*) > 1 ;


-----------SQL JOIN----------------------

---- IS USED TO GET FROM 2 OR MORE TABLES THAT RELATED TO EACH OTHER
----PRIMARY KEY AND FOREIGN KEY RELATIONSHIP

---INNER, LEFT OUTER, RIGHT OUTER, FULL OUTER JOIN.

SELECT COUNTRIES.COUNTRY_NAME, REGIONS.REGION_NAME
FROM COUNTRIES
 INNER JOIN REGIONS ON COUNTRIES.REGION_ID = REGIONS.REGION_ID;


--we can alias for table to make above query slightly more readable
--nicknames are followed by space and the letter or word
--you can use nickname to select the columns
--just like you did in java obj.VariableName

SELECT c.COUNTRY_NAME , r.REGION_NAME
FROM COUNTRIES c
INNER JOIN REGIONS R on c.REGION_ID = R.REGION_ID;


--------IN ORDER TO JOIN TWO TABLES THAT HAS RELATIONSHIP
-----SELECT DESIRED COLUMNS FROM BOTH TABLES
---FROM TABLE 1
----INNER JOIN TABLE 2 ON THE COMMON COLUMN




---IT DOES NOT MATTER WHICH TABLE COMES FIRST
---WHEN YOU DO INNER JOIN----
SELECT LOCATIONS.CITY, COUNTRIES.COUNTRY_NAME
FROM LOCATIONS
INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID;


SELECT DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY
FROM DEPARTMENTS
INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID;


--DISPLAY FIRST_NAME (EMPLOYEES)  , DEPARTMENT_NAME(DEPARTMENTS)
--THEY ARE RELATED BY DEPARTMENT_ID

SELECT EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;


---inner join will return the data that match from both table
---It is returning only rows that has matching department_id from both table
---anything else is excluded.
---for example: Kimberly with no department id
 ----           Department with no employees





--- TO ABLE TO ADD KIMBERLY , USE LEFT JOIN (EMPLOYEES AND MATCHING  AREA)
SELECT EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
 LEFT JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;



SELECT EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
 FULL JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;




----DISPLAY ALL DEPARTMENT_NAME (DEPARTMENTS) AND CITY(LOCATIONS)
----INCLUDING THOSE CITY WITH NO DEPARTMENT IN IT

SELECT DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY
FROM DEPARTMENTS
RIGHT JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID;



SELECT DEPARTMENTS.DEPARTMENT_NAME, COUNT(EMPLOYEES.FIRST_NAME)
FROM EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_NAME;

















